class <%= controller_class_name %>Controller < ApplicationController
  before_action :set_<%= singular_table_name %>, only: %i[ show edit update destroy ]

  add_breadcrumb <%= class_name %>.model_name.human, :<%= plural_table_name %>_path
  add_breadcrumb I18n.t("breadcrumb.show"), :<%= singular_table_name %>_path, only: %i[show]
  add_breadcrumb I18n.t("breadcrumb.new"), :new_<%= singular_table_name %>_path, only: %i[new create]
  add_breadcrumb I18n.t("breadcrumb.edit"), :edit_<%= singular_table_name %>_path, only: %i[edit update]

  respond_to :html

  def index
    @q = <%= class_name %>.ransack(params[:q])
    @<%= plural_table_name %> = @q.result.page(params[:page]).per(params[:limit])
  end

  def show; end

  def new
    @<%= singular_table_name %> = <%= class_name %>.new
  end

  def edit; end

  def create
    @<%= singular_table_name %> = <%= class_name %>.new(<%= singular_table_name %>_params)

    respond_to do |format|
      if @<%= singular_table_name %>.save
        format.html { redirect_to @<%= singular_table_name %>, notice: t("messages.create.notice") }
        format.json { render :show, status: :created, location: @<%= singular_table_name %> }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @<%= singular_table_name %>.errors, status: :unprocessable_entity }
      end
    end
  end

  def update
    respond_to do |format|
      if @<%= singular_table_name %>.update(<%= singular_table_name %>_params)
        format.html { redirect_to @<%= singular_table_name %>, notice: t("messages.update.notice") }
        format.json { render :show, status: :ok, location: @<%= singular_table_name %> }
      else
        format.html { render :edit, status: :unprocessable_entity }
        format.json { render json: @<%= singular_table_name %>.errors, status: :unprocessable_entity }
      end
    end
  end

  def destroy
    @<%= singular_table_name %>.destroy!

    respond_to do |format|
      format.html { redirect_to <%= plural_table_name %>_path, status: :see_other, notice: t("messages.destroy.notice") }
      format.json { head :no_content }
    end
  end

  private

  def set_<%= singular_table_name %>
    @<%= singular_table_name %> = <%= class_name %>.find(params.expect(:id))
  end

  def <%= singular_table_name %>_params
    params.expect(<%= singular_table_name %>: [ <%= attributes_names.map { |name| ":#{name}" }.join(', ') %> ])
  end
end
